name: Deploy to Raspberry Pi

on:
  push:
    branches:
      - main  # Change to your main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.406'  # Change to your .NET version

      - name: Publish .NET App
        run: dotnet publish -c Release -o publish

      - name: Copy Files to Raspberry Pi
        uses: appleboy/scp-action@v0.1.7
        with:
          host: 2.tcp.eu.ngrok.io
          port: 10266 
          username: tjotola
          key: ${{ secrets.PI_SSH_KEY }}
          source: "publish/*"
          target: "/home/pi/app/publish"
          debug: true  # Enable debug logging

      - name: Restart Application on Raspberry Pi
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: 2.tcp.eu.ngrok.io
          port: 10266 
          username: tjotola
          key: ${{ secrets.PI_SSH_KEY }}
          script: |
            sudo mkdir -p /home/pi/app/publish
            cd /home/pi/app/publish

            # Ensure previous instance is properly stopped
            PID=$(pgrep -f "dotnet /home/pi/app/publish/Gaming.Api.dll")
            if [ ! -z "$PID" ]; then
              echo "Stopping existing process $PID"
              kill -9 $PID
            fi
            
            # Ensure old logs don't interfere
            rm -f /home/pi/app/logs.txt

            # Start new process
            echo "Starting application..."
            nohup dotnet /home/pi/app/publish/Gaming.Api.dll > /home/pi/app/logs.txt 2>&1 &

            # Check if the app started correctly
            sleep 5
            if pgrep -f "dotnet /home/pi/app/publish/Gaming.Api.dll" > /dev/null
            then
                echo "Application started successfully"
            else
                echo "Application failed to start" >&2
                exit 1
            fi

